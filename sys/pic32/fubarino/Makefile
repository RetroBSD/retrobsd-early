H		= ../../include
M		= ..
S		= ../../kernel

vpath %.c $(M):$(S)
vpath %.S $(M):$(S)

# Kernel options.
DEFS		+= -I. -I$(H) -DKERNEL -DUCB_METER -DPIC32MX7

# CPU frequency 80 MHz.
DEFS		+= -DCPU_KHZ=80000
DEFS		+= -DBUS_KHZ=80000

#DEFS            += -DROOT='makedev(0,1)'
#DEFS            += -DSWAP='makedev(0,2)'

#
# Fubarino SD board
# =================
#
# Console on USB
# For Windows, use the driver: http://www.schmalzhaus.com/UBW32/FW/UBW32inf.zip
DEFS            += -DCONSOLE_USB
DEFS  		+= -DUSB_NUM_STRING_DESCRIPTORS=3 -DUSB_MAX_EP_NUMBER=3

# SD/MMC card driver on SPI2
# /CS0 at pin G9
DEFS            += -DSD0_PORT=2
DEFS            += -DSD0_CS_PORT=TRISG -DSD0_CS_PIN=9
DEFS            += -DSD0_MHZ=13

#DEFS            += -DSD1_PORT=2
#DEFS            += -DSD1_CS_PORT=TRISB -DSD1_CS_PIN=4
#DEFS            += -DSD1_MHZ=13

# LED at pin E5
#DEFS            += -DLED_DISK_PORT=TRISE   -DLED_DISK_PIN=4
DEFS            += -DLED_KERNEL_PORT=TRISE -DLED_KERNEL_PIN=5
#DEFS            += -DLED_TTY_PORT=TRISE    -DLED_TTY_PIN=6
#DEFS            += -DLED_AUX_PORT=TRISE    -DLED_AUX_PIN=7


#DEFS        += -DMRAMS_ENABLED
#DEFS        += -DMRAMS_PORT=3
#DEFS        += -DMRAMS_CS2_PORT=TRISD   -DMRAMS_CS0_PIN=4
#DEFS        += -DMRAMS_CS3_PORT=TRISD   -DMRAMS_CS1_PIN=5
#DEFS        += -DMRAMS_CS0_PORT=TRISD   -DMRAMS_CS2_PIN=6
#DEFS        += -DMRAMS_CS1_PORT=TRISD   -DMRAMS_CS3_PIN=7
#DEFS        += -DMRAMS_CHIPS=4
#DEFS        += -DMRAMS_CHIPSIZE=512
#DEFS        += -DMRAMS_MHZ=13
#DEFS        += -DMRAMS_LED0_PORT=TRISE  -DMRAMS_LED0_PIN=0
#DEFS        += -DMRAMS_LED1_PORT=TRISE  -DMRAMS_LED1_PIN=1
#DEFS        += -DMRAMS_LED2_PORT=TRISE  -DMRAMS_LED2_PIN=2
#DEFS        += -DMRAMS_LED3_PORT=TRISE  -DMRAMS_LED3_PIN=3



# Include or exclude drivers
DRIVER_GPIO         = yes
# General Purpose I/O
DRIVER_ADC          = yes
# Basic ADC interface
DRIVER_SPI          = yes
# Generic SPI interface
DRIVER_OC           = yes
# Output Compare driver

DEPFLAGS	= -MT $@ -MD -MP -MF .deps/$*.dep
CFLAGS		= -O $(DEFS) $(DEPFLAGS)
ASFLAGS		= $(DEFS) $(DEPFLAGS)

include ../gcc-config.mk

CC		= $(GCCPREFIX)gcc -EL -g -mips32r2
CC		+= -nostdinc -fno-builtin -Werror -Wall -fno-dwarf2-cfi-asm
LDFLAGS         += -nostdlib -T using-bootloader.ld -Wl,-Map=unix.map
SIZE		= $(GCCPREFIX)size
OBJDUMP		= $(GCCPREFIX)objdump
OBJCOPY		= $(GCCPREFIX)objcopy
PROGTOOL        = $(AVRDUDE) -c stk500v2 -p pic32 -b 115200

# Machine-dependent files:
# startup.o MUST be loaded first.
KERNOBJ		= startup.o clock.o devsw.o sysctl.o \
		  signal.o machdep.o mem.o exception.o \
                  usb_device.o usb_function_cdc.o
KERNOBJ		+= usb_console.o

# Kernel.
KERNOBJ		+= init_main.o init_sysent.o kern_clock.o \
		   kern_descrip.o kern_exec.o kern_exit.o kern_fork.o \
		   kern_mman.o kern_proc.o kern_prot.o \
		   kern_prot2.o kern_resource.o kern_sig.o kern_sig2.o \
		   kern_subr.o kern_synch.o kern_sysctl.o kern_time.o \
		   subr_log.o subr_prf.o subr_rmap.o \
		   sys_generic.o sys_inode.o syscalls.o \
		   sys_pipe.o sys_process.o tty.o tty_conf.o \
		   tty_subr.o tty_tty.o ufs_alloc.o ufs_bio.o \
		   ufs_bmap.o ufs_dsort.o ufs_fio.o \
		   ufs_inode.o ufs_mount.o ufs_namei.o ufs_subr.o \
		   ufs_syscalls.o ufs_syscalls2.o vfs_vnops.o \
		   vm_sched.o vm_swap.o vm_swp.o kern_glob.o swap.o spi_bus.o

# Drivers.
KERNOBJ		+= rdisk.o rd_sd.o # rd_mrams.o

# Configuration-dependent files.
KERNOBJ		+= vers.o

# Include any local specific configuration overrides
-include Makefile.local

# This makefile does the work including the right files and options for the drivers
include ../drivers.mk

all:		.deps sys machine unix.elf
		$(SIZE) unix.elf

clean:
		rm -rf .deps *.o *.elf *.bin *.dis *.map *.srec core \
		mklog assym.h vers.c genassym sys machine

.deps:
		mkdir .deps

sys:
		ln -s ../../include $@

machine:
		ln -s .. $@

unix.elf:	$(KERNOBJ) using-bootloader.ld
		$(CC) $(LDFLAGS) $(KERNOBJ) -o $@
		chmod -x $@
		$(OBJDUMP) -d -S $@ > unix.dis
		$(OBJCOPY) -O binary $@ unix.bin
		$(OBJCOPY) -O ihex --change-addresses=0x80000000 $@ unix.hex
		chmod -x $@ unix.bin

load:           unix.hex
		pic32prog -p unix.hex

vers.o:		../newvers.sh $(H)/*.h $(M)/*.[ch] $(S)/*.c
		sh ../newvers.sh > vers.c
		$(CC) -c vers.c

.SUFFIXES:	.i .srec .hex .dis .cpp .cxx .bin .elf

.o.dis:
		$(OBJDUMP) -d -z -S $< > $@

ifeq (.deps, $(wildcard .deps))
-include .deps/*.dep
endif
